import disnake
from disnake.ext import commands

from disnake.ui import Modal
from disnake.interactions.modal import ModalInteraction

channel_id = 1189226210945945722
role_id = 1189214441221406740

class Button1(disnake.ui.View):
    def __init__(self, user_id, message=None):
        super().__init__(timeout=None)
        self.user_id = user_id
        self.message = message
        self.moderator_id = None  # ID –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –≤–∑—è–ª –∑–∞—è–≤–∫—É –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É
        self.owner = '806151791146041344'
        self.allowed_role_id = '1189296785957601360'
        
    @disnake.ui.button(label='–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ', style=disnake.ButtonStyle.blurple)
    async def consider(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        await interaction.response.defer()
        role = disnake.utils.get(interaction.guild.roles, id='1189296785957601360')
        self.moderator_id = interaction.user.id
        self.status = "–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏"
        embed = self.message.embeds[0]
        embed.description = (embed.description or "") + "\n\n–°—Ç–∞—Ç—É—Å: –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏"
        view = ViewButton(interaction.user.id, message=self.message)
        await interaction.edit_original_message(embed=embed, view=view)

class ViewButton(disnake.ui.View):
    def __init__(self, user_id, message):
        super().__init__(timeout=None)
        self.user_id = user_id
        self.message = message

    @disnake.ui.button(label='–ü—Ä–∏–Ω—è—Ç—å', style=disnake.ButtonStyle.green)
    async def approve(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        if interaction.user.id != self.user_id:
            return  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∏ –º–æ–≥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–ª –∑–∞—è–≤–∫—É
        
        await interaction.response.defer()
        guild = interaction.guild
        member = guild.get_member(self.user_id)
        role = guild.get_role(role_id)
        await member.add_roles(role)
        original_embed = interaction.message.embeds[0]

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ (–∏–ª–∏ –¥—Ä—É–≥–æ–µ –ø–æ–ª–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç–∞—Ç—É—Å)
        original_embed.description = original_embed.description.replace('–°—Ç–∞—Ç—É—Å: –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏', '')

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º —Å—Ç–∞—Ç—É—Å–µ
        original_embed.add_field(name="–°—Ç–∞—Ç—É—Å", value="–ü—Ä–∏–Ω—è—Ç–æ")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π embed –æ–±—Ä–∞—Ç–Ω–æ –≤ –∫–∞–Ω–∞–ª
        await interaction.edit_original_message(embed=original_embed, view=None)


    @disnake.ui.button(label='–û—Ç–∫–ª–æ–Ω–∏—Ç—å', style=disnake.ButtonStyle.red)
    async def reject(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        if interaction.user.id != self.user_id:
            return  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∏ –º–æ–≥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–ª –∑–∞—è–≤–∫—É
        
        await interaction.response.defer()
        embed = self.message.embeds[0]
        embed.description = (embed.description or "") + "\n\n–°—Ç–∞—Ç—É—Å: ‚ùå –û—Ç–∫–∞–∑–∞–Ω–æ!"
        await interaction.edit_original_message(embed=embed, view=None)
        await interaction.response.defer()

class Modal2(disnake.ui.Modal):
    def __init__(self, user_id):
        components = [
            disnake.ui.TextInput(label="–í–∞—à–µ –∏–º—è?", placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è", custom_id="name"),
            disnake.ui.TextInput(label="–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç?", placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç", custom_id="age"),
            disnake.ui.TextInput(label="–ù–∞ –∫–∞–∫—É—é —Ä–∞–±–æ—Ç—É –∏–¥—ë—Ç–µ?", placeholder="–û–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Ä–∞–±–æ—Ç—É", custom_id="job"),
            disnake.ui.TextInput(label="–ó–Ω–∞–Ω–∏—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ (–æ—Ç 1 –¥–æ 10)", placeholder="–û—Ü–µ–Ω–∏—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è", custom_id="russian"),
            disnake.ui.TextInput(label="–ó–Ω–∞–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ (–æ—Ç 1 –¥–æ 10)", placeholder="–û—Ü–µ–Ω–∏—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è", custom_id="english"),
        ]
        super().__init__(title="–ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É", components=components, custom_id="a")
        self.user_id = user_id

    async def callback(self, interaction: ModalInteraction) -> None:
        a = interaction.text_values["name"]
        b = interaction.text_values["age"]
        c = interaction.text_values["job"]
        d = interaction.text_values["russian"]
        e = interaction.text_values["english"]
        
        member = interaction.guild.get_member(self.user_id)
        user_name = member.display_name  # –≠—Ç–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        user_tag = str(member)  # –≠—Ç–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç—ç–≥–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä User#1234
        user_mention = member.mention

        embed = disnake.Embed(
            title="–ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É",
            description="",
            color=disnake.Color.purple()
        )
        embed.add_field(name="üë§ –ò–º—è", value=f"{a}", inline=False)
        embed.add_field(name="üéÇ –í–æ–∑—Ä–∞—Å—Ç", value=f"{b}", inline=False)
        embed.add_field(name="üíº –ñ–µ–ª–∞–µ–º–∞—è —Ä–∞–±–æ—Ç–∞", value=f"{c}", inline=False)
        embed.add_field(name="üá∑üá∫ –ó–Ω–∞–Ω–∏–µ —Ä—É—Å—Å–∫–æ–≥–æ", value=f"{d}/10", inline=False)
        embed.add_field(name="üåè –ó–Ω–∞–Ω–∏–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ", value=f"{e}/10", inline=False)
        embed.add_field(name="üë¶/ üë© –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", value=f"{user_mention}", inline=False)
        
        channel = interaction.guild.get_channel(channel_id)

        # –í–∞–∂–Ω–æ: —Å–æ–∑–¥–∞–µ–º Button1 –∏ ViewButton –≤ —ç—Ç–æ–º –º–µ—Ç–æ–¥–µ –¥–æ –æ—Ç–¥–∞—á–∏ message
        view1 = Button1(interaction.user.id)
        # view –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–¥–µ—Å—å
        # view = ViewButton(interaction.user.id)
        
        # –£–±–∏—Ä–∞–µ–º view –∏–∑ send
        message = await channel.send(embed=embed, view=view1)
        
        # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º message —Ç–æ–ª—å–∫–æ –∫ view1
        view1.message = message  # –í–æ—Ç –∑–¥–µ—Å—å –≤—ã –¥–æ–ª–∂–Ω—ã –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ

        # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –∑–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞
        await interaction.response.send_message("–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É!", ephemeral=True)

class Join(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.slash_command(name='work', description='–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É')
    async def work(self, interaction: disnake.ApplicationCommandInteraction):
        # –ü–æ–ª—É—á–∞–µ–º user_id –≤—ã–∑—ã–≤–∞—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id = interaction.user.id
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞, –ø–µ—Ä–µ–¥–∞–≤–∞—è user_id –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç
        modal = Modal2(user_id)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await interaction.response.send_modal(modal)

def setup(bot):
    bot.add_cog(Join(bot))
    print("[Work] –≥–æ—Ç–æ–≤")